{"version":3,"sources":["api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","todosFormServer","title","completed","userId","App","useState","titleInput","setTitleInput","userSelected","setUserSelected","newTodos","setNewTodos","errorMassegeTitle","setErrorMessageTitle","errorMassegeUser","setErrorMessageUser","className","action","method","onSubmit","event","preventDefault","newTodo","createTodo","length","htmlFor","type","value","placeholder","onChange","target","handleErrorMessageTitle","handleErrorMessageUser","disabled","usersFromServer","map","href","todo","index","userOfCurrentTodo","find","user","cn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aff357e9.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\ntype Todo = {\n  id: number,\n  title: string,\n  completed: boolean,\n  userId: number,\n};\n\nconst todosFormServer: Todo[] = [...todosFromServer];\n\nexport const App = () => {\n  const [titleInput, setTitleInput] = useState('');\n  const [userSelected, setUserSelected] = useState(0);\n  const [newTodos, setNewTodos] = useState(todosFormServer);\n  const [errorMassegeTitle, setErrorMessageTitle] = useState(false);\n  const [errorMassegeUser, setErrorMessageUser] = useState(false);\n\n  function handleErrorMessageTitle(event: React.ChangeEvent<HTMLInputElement>) {\n    setErrorMessageTitle(false);\n    setTitleInput(event.target.value);\n  }\n\n  function handleErrorMessageUser(event: React.ChangeEvent<HTMLSelectElement>) {\n    setErrorMessageUser(false);\n    setUserSelected(+event.target.value);\n  }\n\n  function createTodo(\n    id: number, title: string, completed: boolean, userId: number,\n  ) {\n    const newTodo = {\n      id,\n      title,\n      completed,\n      userId,\n    };\n\n    setNewTodos([...newTodos, newTodo]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          if (titleInput === '') {\n            setErrorMessageTitle(true);\n          } else {\n            setErrorMessageTitle(false);\n          }\n\n          if (!userSelected) {\n            setErrorMessageUser(true);\n          } else {\n            setErrorMessageUser(false);\n          }\n\n          if (titleInput && userSelected) {\n            createTodo(\n              newTodos.length + 1,\n              titleInput,\n              false,\n              userSelected,\n            );\n            setTitleInput('');\n            setUserSelected(0);\n          }\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"input\">\n            <span>Title: </span>\n          </label>\n\n          <input\n            type=\"text\"\n            id=\"input\"\n            data-cy=\"titleInput\"\n            value={titleInput}\n            placeholder=\"Enter a title\"\n            onChange={(event) => (handleErrorMessageTitle(event))}\n          />\n\n          {errorMassegeTitle\n           && <span className=\"error\">Please enter a title</span>}\n\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">\n            <span>User: </span>\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"select\"\n            value={userSelected}\n            onChange={(event) => (handleErrorMessageUser(event))}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(({\n              username, id, name,\n            }) => {\n              return (\n                <option\n                  value={id}\n                  key={username}\n                >\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n\n          {errorMassegeUser\n           && <span className=\"error\">Please choose a user</span>}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">\n            delectus aut autem\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"2\" className=\"TodoInfo\">\n          <h2 className=\"TodoInfo__title\">\n            quis ut nam facilis et officia qui\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n            Patricia Lebsack\n          </a>\n        </article>\n\n        {newTodos.map((todo, index) => {\n          const userOfCurrentTodo = usersFromServer.find(\n            user => user.id === todo.userId,\n          ) || {\n            name: 'unknow user',\n            email: '@',\n            completed: false,\n          };\n\n          return (\n            <article\n              data-id={index + 1}\n              className={\n                cn(\n                  'TodoInfo',\n                  { 'TodoInfo--completed': todo.completed },\n                )\n              }\n              key={todo.title}\n            >\n              <h2 className=\"TodoInfo__title\">\n                {todo.title}\n              </h2>\n\n              <a\n                className=\"UserInfo\"\n                href={`mailto:${userOfCurrentTodo.email}`}\n              >\n                {userOfCurrentTodo.name}\n              </a>\n            </article>\n          );\n        })}\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}