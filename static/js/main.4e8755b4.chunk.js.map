{"version":3,"sources":["api/users.ts","App.tsx","index.tsx"],"names":["id","name","username","email","todos","title","user","App","useState","titleInput","setTitleInput","userSelected","setUserSelected","className","action","method","onSubmit","event","preventDefault","newTodo","push","addTodo","type","value","onChange","target","placeholder","htmlFor","currentTarget","disabled","usersFromServer","map","href","todo","index","ReactDOM","render","document","getElementById"],"mappings":"0KAAe,G,KAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,OChDLC,EAAgB,CAAC,CACrBC,MAAO,QACPC,KAAM,SAGKC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAWA,OACE,sBAAKC,UAAU,MAAf,UACE,+CAEA,uBACEC,OAAO,aACPC,OAAO,OACPC,SAAU,SAACC,GACTA,EAAMC,iBAjBd,SAAiBb,EAAeC,GAC9B,IAAMa,EAAU,CACdd,QACAC,QAGFF,EAAMgB,KAAKD,GAYLE,CAAQZ,EAAYE,IALxB,UAQE,sBAAKE,UAAU,QAAf,UACE,uBACES,KAAK,OACLtB,GAAG,QACH,UAAQ,aACRuB,MAAOd,EACPe,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAiBf,EAAce,EAAOF,QAChDG,YAAY,yBAGd,uBAAOC,QAAQ,QAAf,SACE,sBAAMd,UAAU,QAAhB,uCAIJ,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRb,GAAG,SACHuB,MAAOZ,EACPa,SACE,gBAAGI,EAAH,EAAGA,cAAH,OAAwBhB,EAAgBgB,EAAcL,QAL1D,UAQE,wBAAQA,MAAM,GAAGM,UAAQ,EAAzB,2BACCC,EAAgBC,KAAI,YAA6B,IAA1B/B,EAAyB,EAAzBA,GAAIE,EAAqB,EAArBA,SAAUD,EAAW,EAAXA,KACpC,OACE,wBAAQsB,MAAOtB,EAAf,SACGC,GADuBF,SAOhC,uBAAO2B,QAAQ,SAAf,SACE,sBAAMd,UAAU,QAAhB,uCAKJ,wBACES,KAAK,SACL,UAAQ,eAFV,oBAQF,0BAAST,UAAU,WAAnB,UACE,0BAAS,UAAQ,IAAIA,UAAU,+BAA/B,UACE,oBAAIA,UAAU,kBAAd,gCAIA,mBAAGA,UAAU,WAAWmB,KAAK,2BAA7B,8BAKF,0BAAS,UAAQ,KAAKnB,UAAU,+BAAhC,UACE,oBAAIA,UAAU,kBAAd,gCAEA,mBAAGA,UAAU,WAAWmB,KAAK,2BAA7B,8BAKF,0BAAS,UAAQ,IAAInB,UAAU,WAA/B,UACE,oBAAIA,UAAU,kBAAd,gDAIA,mBAAGA,UAAU,WAAWmB,KAAK,mCAA7B,iCAKD5B,EAAM2B,KAAI,SAACE,EAAMC,GAChB,OACE,0BACE,UAASA,EACTrB,UAAU,WAFZ,UAKE,oBAAIA,UAAU,kBAAd,SACGoB,EAAK5B,OAD6B4B,EAAK5B,OAI1C,mBACEQ,UAAU,WACVmB,KAAK,mCAFP,SAKGC,EAAK3B,MAFD2B,EAAK3B,QATP2B,EAAK5B,iBCxHxB8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.4e8755b4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\n// import todosFromServer from './api/todos';\n\ntype Todo = {\n  title: string,\n  user: string,\n};\n\nconst todos: Todo[] = [{\n  title: 'title',\n  user: 'user',\n}];\n\nexport const App = () => {\n  const [titleInput, setTitleInput] = useState('');\n  const [userSelected, setUserSelected] = useState('');\n\n  function addTodo(title: string, user: string) {\n    const newTodo = {\n      title,\n      user,\n    };\n\n    todos.push(newTodo);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          addTodo(titleInput, userSelected);\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            id=\"input\"\n            data-cy=\"titleInput\"\n            value={titleInput}\n            onChange={({ target }) => (setTitleInput(target.value))}\n            placeholder=\"Please enter a title\"\n          />\n\n          <label htmlFor=\"input\">\n            <span className=\"error\">Please enter a title</span>\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            id=\"select\"\n            value={userSelected}\n            onChange={\n              ({ currentTarget }) => (setUserSelected(currentTarget.value))\n            }\n          >\n            <option value=\"\" disabled>Choose a user</option>\n            {usersFromServer.map(({ id, username, name }) => {\n              return (\n                <option value={name} key={id}>\n                  {username}\n                </option>\n              );\n            })}\n          </select>\n\n          <label htmlFor=\"select\">\n            <span className=\"error\">Please choose a user</span>\n          </label>\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <article data-id=\"1\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">\n            delectus aut autem\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"15\" className=\"TodoInfo TodoInfo--completed\">\n          <h2 className=\"TodoInfo__title\">delectus aut autem</h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Sincere@april.biz\">\n            Leanne Graham\n          </a>\n        </article>\n\n        <article data-id=\"2\" className=\"TodoInfo\">\n          <h2 className=\"TodoInfo__title\">\n            quis ut nam facilis et officia qui\n          </h2>\n\n          <a className=\"UserInfo\" href=\"mailto:Julianne.OConner@kory.org\">\n            Patricia Lebsack\n          </a>\n        </article>\n\n        {todos.map((todo, index) => {\n          return (\n            <article\n              data-id={index}\n              className=\"TodoInfo\"\n              key={todo.title}\n            >\n              <h2 className=\"TodoInfo__title\" key={todo.title}>\n                {todo.title}\n              </h2>\n\n              <a\n                className=\"UserInfo\"\n                href=\"mailto:Julianne.OConner@kory.org\"\n                key={todo.user}\n              >\n                {todo.user}\n              </a>\n            </article>\n          );\n        })}\n      </section>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}